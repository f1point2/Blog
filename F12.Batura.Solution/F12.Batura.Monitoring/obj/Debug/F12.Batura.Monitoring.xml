<?xml version="1.0" encoding="utf-8"?>
<ManagementPack SchemaVersion="2.0" ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>F12.Batura.Monitoring</ID>
      <Version>1.0.0.99</Version>
    </Identity>
    <Name>F12 Batura Monitoring</Name>
    <References>
      <Reference Alias="SQL2012">
        <ID>Microsoft.SQLServer.2012.Discovery</ID>
        <Version>6.7.31.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SQLLib">
        <ID>Microsoft.SQLServer.Library</ID>
        <Version>6.7.31.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="MSIL">
        <ID>Microsoft.SystemCenter.InstanceGroup.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="IIS2016">
        <ID>Microsoft.Windows.InternetInformationServices.2016</ID>
        <Version>10.0.6.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="IISLib">
        <ID>Microsoft.Windows.InternetInformationServices.CommonLibrary</ID>
        <Version>10.0.6.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>7.0.8433.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>7.5.8501.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="F12.Batura.Monitoring.AppServer" Base="Windows!Microsoft.Windows.ApplicationComponent" Accessibility="Public" Abstract="false" Hosted="true" Singleton="false"></ClassType>
        <ClassType ID="F12.Batura.Monitoring.AppServer.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.Computer.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.OperatingSystem.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.HSW.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.IISWebSites.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.Databases.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
        <ClassType ID="F12.Batura.Monitoring.IISAppPools.Group" Base="MSIL!Microsoft.SystemCenter.InstanceGroup" Abstract="false" Accessibility="Public" Hosted="false" Singleton="true" />
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="F12.Batura.Monitoring.WindowsComputerHostsBaturaApplicationServer" Base="System!System.Hosting" Abstract="false" Accessibility="Internal">
          <Source ID="Source" Type="Windows!Microsoft.Windows.Computer" />
          <Target ID="Target" Type="F12.Batura.Monitoring.AppServer" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.DS.PropertyBag" Accessibility="Internal">
        <Configuration>
          <!-- Need configuration elements for the scheduler -->
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <!-- Need configuration elements for the probe -->
          <xsd:element minOccurs="1" name="folderPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="folderPath" Selector="$Config/folderPath$" ParameterType="string" />
          <OverrideableParameter ID="threshold" Selector="$Config/threshold$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <DataSource ID="Schedule" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Probe">
                <folderPath>$Config/folderPath$</folderPath>
                <threshold>$Config/threshold$</threshold>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Schedule" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Probe" Accessibility="Internal">
        <Configuration>
          <xsd:element minOccurs="1" name="folderPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation>
          <Composite>
            <MemberModules>
              <!-- These are the modules that make up the module, the composition section is where we state the order they run -->
              <!-- Trigger only probe means it doesn't require any incoming data e.g. use for On Demand Detection-->
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>1_PScript1.ps1</ScriptName>
                <ScriptBody><![CDATA[Param (
[string]$folderPath,
[int]$threshold
)


Try {
$API = New-Object -comObject "MOM.ScriptAPI"
$Bag = $API.CreatePropertyBag()  

#Check that the folder path exists
$subFolders=Get-ChildItem -Path $folderPath -ErrorAction Stop | Where {$_.PSIsContainer}
$numFolders=$subFolders.Count
$api.LogScriptEvent('Number of Folders = ',40,0,$numFolders)


	$Bag.AddValue("OutputDescription", "Folders found")
	$Bag.AddValue("FolderPath", $folderPath)
	$Bag.AddValue("NumberOfFolders", $numFolders)
	$Bag.AddValue("Threshold",$threshold)
}

Catch {
	$Bag.AddValue("OutputDescription", $_.Exception.Message)
	$Bag.AddValue("FolderPath", $folderPath)
	$Bag.AddValue("NumberOfFolders", 0)
	$Bag.AddValue("Threshold",$threshold)

}

Finally {
$Bag
}
]]></ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>folderPath</Name>
                    <Value>$Config/folderPath$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>threshold</Name>
                    <Value>$Config/threshold$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>120</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.MonitorType" Accessibility="Internal">
        <MonitorTypeStates>
          <MonitorTypeState ID="LessEqualThreshold" NoDetection="false" />
          <MonitorTypeState ID="OverThreshold" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="From" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="To" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Days" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="MatchCount" type="xsd:int" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="folderPath" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="threshold" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <!-- Copy form 3_DS -->
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="From" Selector="$Config/From$" ParameterType="string" />
          <OverrideableParameter ID="To" Selector="$Config/To$" ParameterType="string" />
          <OverrideableParameter ID="Days" Selector="$Config/Days$" ParameterType="int" />
          <OverrideableParameter ID="MatchCount" Selector="$Config/MatchCount$" ParameterType="int" />
          <OverrideableParameter ID="folderPath" Selector="$Config/folderPath$" ParameterType="string" />
          <OverrideableParameter ID="threshold" Selector="$Config/threshold$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="F12.Batura.Monitoring.CheckNumFoldersInFolder.DS.PropertyBag">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <folderPath>$Config/folderPath$</folderPath>
              <threshold>$Config/threshold$</threshold>
            </DataSource>
            <!-- We want a probe for on demand detection. The ability to use recalucalte health outside of the scheduler \ DS -->
            <ProbeAction ID="Probe" TypeID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Probe">
              <folderPath>$Config/folderPath$</folderPath>
              <threshold>$Config/threshold$</threshold>
            </ProbeAction>
            <!-- Condition Detections to determine health states -->
            <!-- LessEqual -->
            <ConditionDetection ID="FilterLessEqualThreshold" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='NumberOfFolders']</XPathQuery>
                  </ValueExpression>
                  <Operator>LessEqual</Operator>
                  <ValueExpression>
                    <Value>$Config/threshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <!-- Condition Detections to determine health states -->
            <!-- Over -->
            <ConditionDetection ID="FilterOverThreshold" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='NumberOfFolders']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value>$Config/threshold$</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
              <SuppressionSettings>
                <MatchCount>$Config/MatchCount$</MatchCount>
              </SuppressionSettings>
            </ConditionDetection>
            <ConditionDetection ID="Filter" TypeID="System!System.SchedulerFilter">
              <SchedulerFilter>
                <ProcessDataMode>OnSchedule</ProcessDataMode>
                <Schedule>
                  <WeeklySchedule>
                    <Windows>
                      <Daily>
                        <Start>$Config/From$</Start>
                        <End>$Config/To$</End>
                        <DaysOfWeekMask>$Config/Days$</DaysOfWeekMask>
                      </Daily>
                    </Windows>
                  </WeeklySchedule>
                  <ExcludeDates />
                </Schedule>
                <UseCurrentTime>true</UseCurrentTime>
              </SchedulerFilter>
            </ConditionDetection>
          </MemberModules>
          <!-- REGULAR DETECTIONS -->
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="LessEqualThreshold">
              <Node ID="FilterLessEqualThreshold">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="OverThreshold">
              <Node ID="FilterOverThreshold">
                <Node ID="Filter">
                  <Node ID="DS" />
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
          <!-- ON DEMAND DETECTIONS -->
          <OnDemandDetections>
            <OnDemandDetection MonitorTypeStateID="LessEqualThreshold">
              <Node ID="FilterLessEqualThreshold">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="OverThreshold">
              <Node ID="FilterOverThreshold">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
          </OnDemandDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="F12.Batura.Monitoring.AppServer.Discovery" Target="Windows!Microsoft.Windows.Server.OperatingSystem" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="F12.Batura.Monitoring.AppServer" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <!-- 
PathType - Integer
  Specifies whether the path is a key or a value.
  • 0—Specifies that the path is to a key, for which the existence of the key should be checked.
  • 1—Specifies that the path is to a value that should be retrieved.

AttributeType -   Integer
  The data type of the value to return:
  • 0—Boolean
  • 1—String
  • 2—Integer
  • 3—Float
Values 1, 2, and 3 are used only when the PathType is set to 1.
-->
              <AttributeName>SeedExists</AttributeName>
              <Path>SYSTEM\CurrentControlSet\Services\BaturaDoStuff</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>3600</Frequency>
          <ClassId>$MPElement[Name="F12.Batura.Monitoring.AppServer"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Values/SeedExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">True</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.AppServer.Group.Discovery" Target="F12.Batura.Monitoring.AppServer.Group" Enabled="true" ConfirmDelivery="false" Priority="Normal" Remotable="true">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.AppServer"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.Computer.Group.Discovery" Target="F12.Batura.Monitoring.Computer.Group" Enabled="true" ConfirmDelivery="false" Priority="Normal" Remotable="true">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <Contains maxDepth="1">
                  <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.AppServer"]$</MonitoringClass>
                </Contains>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.OperatingSystem.Group.Discovery" Target="F12.Batura.Monitoring.OperatingSystem.Group" Enabled="true" ConfirmDelivery="false" Priority="Normal" Remotable="true">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Server.OperatingSystem"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <Contained maxDepth="1">
                  <MonitoringClass>$MPElement[Name="Windows!Microsoft.Windows.Computer"]$</MonitoringClass>
                  <Expression>
                    <Contains maxDepth="1">
                      <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.AppServer"]$</MonitoringClass>
                    </Contains>
                  </Expression>
                </Contained>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.HSW.Group.Discovery" Target="F12.Batura.Monitoring.HSW.Group" Enabled="true" ConfirmDelivery="false" Priority="Normal" Remotable="true">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="SC!Microsoft.SystemCenter.AgentWatcher"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <Contains>
                  <MonitoringClass>$MPElement[Name="SC!Microsoft.SystemCenter.HealthService"]$</MonitoringClass>
                  <Expression>
                    <Contained>
                      <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.Computer.Group"]$</MonitoringClass>
                    </Contained>
                  </Expression>
                </Contains>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.IISWebSites.Group.Discovery" Target="F12.Batura.Monitoring.IISWebSites.Group" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="IIS2016!Microsoft.Windows.InternetInformationServices.10.0.WebSite"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="IISLib!Microsoft.Windows.InternetInformationServices.WebSite"]/Description$</Property>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value>Batura</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <RegExExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                      </ValueExpression>
                      <Operator>ContainsSubstring</Operator>
                      <Pattern>win16ftpserver.mcinsight.co.uk</Pattern>
                    </RegExExpression>
                  </Expression>
                </And>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.Databases.Group.Discovery" Target="F12.Batura.Monitoring.Databases.Group" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="SQL2012!Microsoft.SQLServer.2012.Database"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <And>
                  <Expression>
                    <Or>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <Property>$MPElement[Name="SQLLib!Microsoft.SQLServer.Database"]/DatabaseName$</Property>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value>Batura_App</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                      <Expression>
                        <SimpleExpression>
                          <ValueExpression>
                            <Property>$MPElement[Name="SQLLib!Microsoft.SQLServer.Database"]/DatabaseName$</Property>
                          </ValueExpression>
                          <Operator>Equal</Operator>
                          <ValueExpression>
                            <Value>Batura_Config</Value>
                          </ValueExpression>
                        </SimpleExpression>
                      </Expression>
                    </Or>
                  </Expression>
                  <Expression>
                    <RegExExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="SQLLib!Microsoft.SQLServer.ServerRole"]/InstanceName$</Property>
                      </ValueExpression>
                      <Operator>ContainsSubstring</Operator>
                      <Pattern>INST1</Pattern>
                    </RegExExpression>
                  </Expression>
                  <Expression>
                    <RegExExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                      </ValueExpression>
                      <Operator>ContainsSubstring</Operator>
                      <Pattern>win12clsqlquins.mcinsight.co.uk</Pattern>
                    </RegExExpression>
                  </Expression>
                </And>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.Group.Discovery" Target="F12.Batura.Monitoring.Group" Enabled="true" ConfirmDelivery="false" Priority="Normal" Remotable="true">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.AppServer.Group"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.HSW.Group"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.IISWebSites.Group"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.IISAppPools.Group"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="F12.Batura.Monitoring.Databases.Group"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
      <Discovery ID="F12.Batura.Monitoring.IISAppPools.Group.Discovery" Target="F12.Batura.Monitoring.IISAppPools.Group" Enabled="true" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryRelationship TypeID="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="SC!Microsoft.SystemCenter.GroupPopulator">
          <RuleId>$MPElement$</RuleId>
          <GroupInstanceId>$Target/Id$</GroupInstanceId>
          <MembershipRules>
            <MembershipRule>
              <MonitoringClass>$MPElement[Name="IIS2016!Microsoft.Windows.InternetInformationServices.10.0.ApplicationPool"]$</MonitoringClass>
              <RelationshipClass>$MPElement[Name="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities"]$</RelationshipClass>
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="IISLib!Microsoft.Windows.InternetInformationServices.ApplicationPool"]/PoolID$</Property>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value>Batura</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <RegExExpression>
                      <ValueExpression>
                        <Property>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Property>
                      </ValueExpression>
                      <Operator>ContainsSubstring</Operator>
                      <Pattern>win16ftpserver.mcinsight.co.uk</Pattern>
                    </RegExExpression>
                  </Expression>
                </And>
              </Expression>
            </MembershipRule>
          </MembershipRules>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Monitors>
      <UnitMonitor ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.AppServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="F12.Batura.Monitoring.CheckNumFoldersInFolder.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Data/Context/Property[@Name='Threshold']$ </AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='NumberOfFolders']$ </AlertParameter2>
            <AlertParameter3>$Data/Context/Property[@Name='FolderPath']$ </AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="LessEqualThreshold" MonitorTypeStateID="LessEqualThreshold" HealthState="Success" />
          <OperationalState ID="OverThreshold" MonitorTypeStateID="OverThreshold" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>60</IntervalSeconds>
          <SyncTime />
          <From>08:00</From>
          <To>23:50</To>
          <Days>62</Days>
          <MatchCount>1</MatchCount>
          <folderPath>c:\temp</folderPath>
          <threshold>5</threshold>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.AppServer" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Host/Property[Type='Windows!Microsoft.Windows.Computer']/PrincipalName$</AlertParameter1>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <ComputerName>$Target/Host/Property[Type='Windows!Microsoft.Windows.Computer']/PrincipalName$</ComputerName>
          <ServiceName>BaturaDoStuff</ServiceName>
          <CheckStartupType>False</CheckStartupType>
        </Configuration>
      </UnitMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaAppGroup" Accessibility="Public" Enabled="true" MemberMonitor="Health!System.Health.AvailabilityState" ParentMonitorID="Health!System.Health.AvailabilityState" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" Priority="Normal" Remotable="false" Target="F12.Batura.Monitoring.AppServer.Group">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaComputerGroup" Accessibility="Public" Enabled="true" MemberMonitor="Health!System.Health.AvailabilityState" ParentMonitorID="Health!System.Health.AvailabilityState" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" Priority="Normal" Remotable="false" Target="F12.Batura.Monitoring.Computer.Group">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaOperatingSystemGroup" Accessibility="Public" Enabled="true" MemberMonitor="Health!System.Health.AvailabilityState" ParentMonitorID="Health!System.Health.AvailabilityState" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" Priority="Normal" Remotable="false" Target="F12.Batura.Monitoring.OperatingSystem.Group">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaHSWGroup" Accessibility="Public" Enabled="true" MemberMonitor="Health!System.Health.AvailabilityState" ParentMonitorID="Health!System.Health.AvailabilityState" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" Priority="Normal" Remotable="false" Target="F12.Batura.Monitoring.HSW.Group">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaWebSitesGroup" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.IISWebSites.Group" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.Monitor.DRollup.DatabasesInstanceGroupHealth" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.Databases.Group" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.Monitor.DRollup.ApplicationGroupHealth" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.Group" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
      <DependencyMonitor ID="F12.Batura.Monitoring.DepMonitor.BaturaAppPoolsGroup" Accessibility="Public" Enabled="true" Target="F12.Batura.Monitoring.IISAppPools.Group" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" RelationshipType="MSIL!Microsoft.SystemCenter.InstanceGroupContainsEntities" MemberMonitor="Health!System.Health.AvailabilityState">
        <Category>AvailabilityHealth</Category>
        <Algorithm>WorstOf</Algorithm>
      </DependencyMonitor>
    </Monitors>
    <Diagnostics>
      <Diagnostic ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.Diagnostic" Target="F12.Batura.Monitoring.AppServer" Accessibility="Public" Enabled="false" Monitor="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor" ExecuteOnState="Error" Remotable="true" Timeout="300">
        <Category>Maintenance</Category>
        <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
          <ScriptName>6_PSDiagnostic.ps1</ScriptName>
          <ScriptBody><![CDATA[
Param (
[string]$folderPath
)

#Check that the folder path exists
$subFolders=Get-ChildItem -Path $folderPath -ErrorAction Stop | Where {$_.PSIsContainer} 
ForEach ($subfolder in $subfolders)
{
$output += $subFolder.FullName + "`r`n"
}

$api = New-Object -ComObject 'MOM.ScriptAPI'

$bag=$api.createpropertybag()
$bag.AddValue('Folders',$output)
$bag

]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>folderPath</Name>
              <Value>$Data/StateChange/DataItem/Context/DataItem/Property[@Name='FolderPath']$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </ProbeAction>
      </Diagnostic>
    </Diagnostics>
    <Recoveries>
      <Recovery ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.Recovery" Target="F12.Batura.Monitoring.AppServer" Monitor="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor" Accessibility="Public" Enabled="false" ExecuteOnState="Error" Remotable="true" ResetMonitor="true" Timeout="300">
        <Category>Maintenance</Category>
        <WriteAction ID="WA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
          <ScriptName>8_PRecovery.ps1$</ScriptName>
          <ScriptBody><![CDATA[param(
[string]$folderPath
)

$subFolders=Get-ChildItem -Path $folderPath -ErrorAction Stop | Where {$_.PSIsContainer} | foreach ($_) {remove-item $_.fullname}
]]></ScriptBody>
          <Parameters>
            <Parameter>
              <Name>folderPath</Name>
              <Value>$Data/StateChange/DataItem/Context/DataItem/Property[@Name='FolderPath']$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
        </WriteAction>
      </Recovery>
    </Recoveries>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.AlertMessage" />
      <StringResource ID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff.AlertMessage" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="F12.Batura.Monitoring.AppServer">
          <Name>Batura Application Server</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.WindowsComputerHostsBaturaApplicationServer">
          <Name>Windows Computer Hosts Batura Application Server</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.AppServer.Discovery">
          <Name>Discover Batura Application Server</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.AppServer.Group.Discovery">
          <Name>Discover Batura Application Server Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.AppServer.Group">
          <Name>Batura Application Server Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.DepMonitor.BaturaAppGroup">
          <Name>Batura Application Server Group  Health Roll up (Dependency Rollup Monitor)</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Computer.Group">
          <Name>Batura Computer Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Computer.Group.Discovery">
          <Name>Discover Batura Computer Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.DepMonitor.BaturaComputerGroup">
          <Name>Batura Computer Group  Health Roll up (Dependency Rollup Monitor)</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.OperatingSystem.Group">
          <Name>Batura Operating System Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.OperatingSystem.Group.Discovery">
          <Name>Discover Batura Operating System Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.DepMonitor.BaturaOperatingSystemGroup">
          <Name>Batura Operating System Group  Health Roll up (Dependency Rollup Monitor)</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.HSW.Group">
          <Name>Batura Agent Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.HSW.Group.Discovery">
          <Name>Discover Batura Agent Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.DepMonitor.BaturaHSWGroup">
          <Name>Batura Agent Health Group  Health Roll up (Dependency Rollup Monitor)</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.IISWebSites.Group">
          <Name>Batura WebSites Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.IISWebSites.Group.Discovery">
          <Name>Discover Batura WebSites Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Databases.Group">
          <Name>Batura Databases Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Databases.Group.Discovery">
          <Name>Discover Batura Databases Instance Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Group.Discovery">
          <Name>Discover Batura Application Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.Group">
          <Name>Batura Application</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.IISAppPools.Group">
          <Name>Batura Application Pools Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.IISAppPools.Group.Discovery">
          <Name>Discover Batura Application Pools Group</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring">
          <Name>F12 Batura Monitoring</Name>
          <Description>\\server\share\scom\mp\requirements\Batura.docx</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor">
          <Name>Check Number of Folders in Folder</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.AlertMessage">
          <Name>Too many folders in Batura Config Folder</Name>
          <Description>There are {1} folders in the folder {2} which is over the threshold of {0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor" SubElementID="LessEqualThreshold">
          <Name>Number of Folders in Batura Config folder below threshold</Name>
          <Description>There are {1} folders in the folder {2} which is less than or equal to the threshold of {0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor" SubElementID="OverThreshold">
          <Name>Number of Folders in the Batura Config folder is over threshold</Name>
          <Description>There are {1} folders in the folder {2} which is over the threshold of {0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.Diagnostic">
          <Name>List Folders</Name>
          <Description>List subfolders</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.CheckNumFoldersInFolder.Monitor.Recovery">
          <Name>Delete Folders</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff">
          <Name>BaturaDoStuff Monitor</Name>
          <Description>Description for the new unit monitor.</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff.AlertMessage">
          <Name>BaturaDoStuff Service is Not Running</Name>
          <Description>The BaturaDoStuff Service is not running on {0}</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff" SubElementID="Running">
          <Name>Running</Name>
          <Description>Running</Description>
        </DisplayString>
        <DisplayString ElementID="F12.Batura.Monitoring.UnitMonitor.Service.BaturaDoStuff" SubElementID="NotRunning">
          <Name>NotRunning</Name>
          <Description>NotRunning</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>